学习java中，总结了一些java的特点以及跟C++的区别
1：java中 在类的关系继承图中，基类是处于顶层，派生类处于底层，Upcasting就是当函数的参数类型是基类时，此时如果传递一个子类
对象，编译器会把子类对象转换成基类对象，这样是安全的，它可以指向基类的任何可以执行的函数。Downcasting就是当函数的参数类型
是基类时，此时如果传递子类对象，要把传递的子类恢复成子类的对象，而不是基类对象。
2：C++中一个作用域嵌套另一个作用域时，当这两个作用域含有相同类型相同名字的变量名时，在子作用域会屏蔽父作用域的变量，但是在
java中不允许在子作用域中定制和父作用域中相同的名字，目的是避免混乱。
3：java中所有变量都可以说是对象，对象都是在堆中创建，通过一个句柄来操纵对象。例外的是主类型，主类型是 boolean ,char,byte,
short,int,long,float,double.
4：主类型是在堆栈中创建，方便快速访问。在类中会对主类型有默认的初始化。数值主类型全部是有符号的。
5：BigInteger 和 BigDecimal是java支持的任意精度，大小的数字，但他们是封装的，不是主类型。
6：java会对数组的长度进行检查，防止数组越界的发生，这在C++中是不存在。
7：java会对没有句柄的对象回收空间，这种垃圾回收机制在C++中也是没有的。
8：java支持向前引用，如：
class MyClass {
     int method() {return n; }
     int m = method();
     int n = 1;
}
在定义函数method之前 变量n并没有定义，所以这是向前引用。它的实现方式是在运行时先按顺序装载所有字段，先m后n。这里问题是m是
被初始化为1还是0，答案是0，因为在装载m时候，n并没有装载，所以n被当做0，因此m=1了。
9：java中采用import来导入一个类，有点类似C++中的include
10：static声明的字段或者函数与对象无关，类的对象会共享static声明的字段或者函数，这点跟C++一样。

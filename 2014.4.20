ASP.net 验证控件的使用

1	CompareValidator
通过controlToValidate属性来绑定待验证的控件，作用是用来比较一个值和另一个值或者执行数据类型检查
2 	RequiredFieldValidator
通过controlToValidate属性来绑定待验证的控件，用于比较一个值和正则表达式

以上两个控件的使用代码如下所示：
<body>
    <form id="form1" runat="server">
    <div>
        <fieldset>
        <legend> Prodcut Oder form</legend>
        <asp:Label ID="Label1" runat="server" Text="Product Name" 
            AssociatedControlID="TextBox1"></asp:Label>
        <br />
        <asp:TextBox ID="TextBox1" runat="server"></asp:TextBox>
        <br />
        <asp:RequiredFieldValidator ID="RequiredFieldValidator1" runat="server" 
            ErrorMessage="RequiredFieldValidator" ControlToValidate="TextBox1">(Required)</asp:RequiredFieldValidator>
        <br />
    <asp:Label ID="Label2" runat="server" Text="Product Price" 
        AssociatedControlID="TextBox2"></asp:Label>
    <br/>
        <asp:TextBox ID="TextBox2" runat="server" Columns="5"></asp:TextBox>
    <br />
    <asp:RequiredFieldValidator ID="RequiredFieldValidator2" runat="server" 
        ControlToValidate="TextBox2" 
        ErrorMessage="RequiredFieldValidator">(Required)</asp:RequiredFieldValidator>
    <br />
    <asp:CompareValidator ID="CompareValidator1" runat="server" 
        ControlToValidate="TextBox2" ErrorMessage="CompareValidator" 
        Operator="DataTypeCheck" Type="Currency">(Invalidate Price)</asp:CompareValidator>

    <br />
    <asp:Label ID="Label3" runat="server" AssociatedControlID="TextBox3" 
        Text="Product Quantity"></asp:Label>
    <br />
    <asp:TextBox ID="TextBox3" runat="server" Columns="5"></asp:TextBox>
    <br />
    <asp:RequiredFieldValidator ID="RequiredFieldValidator3" runat="server" 
        ControlToValidate="TextBox3" Display="Dynamic" 
        ErrorMessage="RequiredFieldValidator">(Required)</asp:RequiredFieldValidator>
    <br />
    <asp:CompareValidator ID="CompareValidator2" runat="server" 
        ErrorMessage="CompareValidator" Operator="DataTypeCheck" Type="Integer" 
                ControlToValidate="TextBox3">(Invalidate Quantity)</asp:CompareValidator>
    <br />
    <asp:Button ID="Button1" runat="server" onclick="Button1_Click" Text="Submit" />
    </fieldset>

    <asp:Label ID="lblResult" runat="server" Text="Label"></asp:Label>
    </div>
    </form>
</body>

3 Page.IsValid
每个验证控件都包含一个IsValid属性，如果没有验证错误，这个属性返回True。如果所有的验证控件都返回TRUE，那么Page.Isvalid返回

True。

4 验证控件与javaScript
默认情况下，验证控件会在客户端和服务器端进行验证，验证客户端控件 使用Javascript。如果客户端不支持Javascript，那么验证信息

会在提交服务器后才会显示。
即便再客户端进行了验证，在服务器端依然要进行验证，这样是处于安全考虑。通过设置EnableClientScript = false，可以禁用客户端验

证。

客户端的Page.isvalid验证错误，那么就不会提交服务器端再进行验证，如果客户端不能进行验证，那么即便出现验证错误，也会提交服务

端。

5 验证控件的Display属性
Display有三个值，static，dynamic，none
当属性值是static的时候，验证信息如下
<span id="RequiredFieldValidator2" style="visibility:hidden;">(Required)</span><span id="RequiredFieldValidator3" 

style="display:none;">(Required)</span>
visiblility和display属性都能隐藏文本，但是两者还是有不同点的，visibility隐藏的内容依然占据页面控件，而Display隐藏的内容不

再占据页面控件。

6 验证控件的分组
在验证控件以及Button 控件中都有ValidationGroup这个属性，通过设置ValidationGroup的属性值，可以实现验证控件的分组。

7 RangeValidator验证控件
使用这个验证控件必须设置5个属性ControlToValidate，Text，MinimumValidate，MaximumValidate，Type

8 RegularExpressionValidator验证控件用于把表单字段的值和正则表达式进行比较
例如可以通过这个验证控件来验证输入是否是符合格式的电子邮件

9 customValidator控件
重要属性
ControlValidate：相关联的控件
Text：验证失败显示的错误信息
ClientValidationFunction：用于执行客户端验证的客户端函数

支持的事件
ServerValidate --CustomValidate执行验证时引发的事件。
示例代码如下：
<asp:Label ID="Label1" runat="server" AssociatedControlID="TextBox1" 
            Text="Comments"></asp:Label>
        <br />
        <asp:TextBox ID="TextBox1" runat="server" Columns="30" Rows="5" 
            TextMode="MultiLine"></asp:TextBox>
        <br />
        <asp:CustomValidator ID="CustomValidator1" runat="server" 
            ControlToValidate="TextBox1" ErrorMessage="CustomValidator" 
            onservervalidate="CustomValidator1_ServerValidate">&quot;Comments must be less than 10 

letters&quot;</asp:CustomValidator>
        <br />
        <br />
        <br />
        <asp:Button ID="Button1" runat="server" Text="Submit" />
        <br />

对应的事件处理函数：
 protected void CustomValidator1_ServerValidate(object source, ServerValidateEventArgs args)
        {
            if (args.Value.Length > 10)
            {
                args.IsValid = false;
            }
            else
            {
                args.IsValid = true;
            }
        }
其中的SeverValidateEventArgs有3个属性，Value(关联表单的字段值)，IsValid（表示验证成功或者失败）


10 ValidationSummary控件的使用
ValidationSummary控件用于把所有的验证出错信息显示在一起。
我们知道验证控件具有ErrorMessage属性以及Text属性，这两个的区别是ErrorMessage属性的值会出现在ValidationSummary中，Text的属

性值出现在页面中。
实例代码如下所示：
<body>
    <form id="form1" runat="server">
    <div>
    
        <asp:ValidationSummary ID="ValidationSummary1" runat="server" />
        <br />
        <asp:Label ID="Label1" runat="server" Text="Label"></asp:Label>
        <br />
        <asp:TextBox ID="TextBox1" runat="server" Columns="30" Rows="5" 
            TextMode="MultiLine"></asp:TextBox>
        <br />
        <asp:RequiredFieldValidator ID="RequiredFieldValidator1" runat="server" 
            ControlToValidate="TextBox1" ErrorMessage="Required First Name">(Required)</asp:RequiredFieldValidator>
        <br />
        <br />
        <asp:Label ID="Label2" runat="server" Text="Label"></asp:Label>
        <br />
        <asp:TextBox ID="TextBox2" runat="server" Columns="30" Rows="5" 
            TextMode="MultiLine"></asp:TextBox>
        <br />
        <asp:RequiredFieldValidator ID="RequiredFieldValidator2" runat="server" 
            ControlToValidate="TextBox2" ErrorMessage="Required Last Name">(Required)</asp:RequiredFieldValidator>
        <br />
        <br />
        <br />
        <asp:Button ID="Button1" runat="server" Text="Submit" />
    
    </div>
    </form>
</body>
